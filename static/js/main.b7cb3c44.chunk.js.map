{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","itemWidth","frameSize","step","images","styles","width","className","type","onClick","stepNum","list","document","querySelector","scrollLeft","prevImages","style","map","image","src","alt","nextImages","App","state","maxWidth","onChange","event","value","Number","target","name","setState","this","length","React","Component","ReactDOM","render","getElementById"],"mappings":"uPAUaA,EAA4B,SAAC,GAKnC,IAAD,IAJJC,iBAII,MAJQ,IAIR,MAHJC,iBAGI,MAHQ,EAGR,MAFJC,YAEI,MAFG,EAEH,EADJC,EACI,EADJA,OAkBMC,EAAS,CACbC,MAAOJ,EAAYD,GAGrB,OACE,sBAAKM,UAAU,YAAf,UACE,wBACEA,UAAU,sBACVC,KAAK,SACLC,QAAS,kBAzBI,SAACC,GAClB,IAAMC,EAAOC,SAASC,cAAc,YAEhCF,IACFA,EAAKG,YAAcJ,EAAUT,GAqBZc,CAAWZ,IAH5B,SAKG,MAEH,qBAAKI,UAAU,UAAf,SACE,qBAAKA,UAAU,WAAWS,MAAOX,EAAjC,SACE,oBAAIE,UAAU,iBAAd,SACGH,EAAOa,KAAI,SAAAC,GAAK,OACf,6BACE,qBACEC,IAAKD,EACLE,IAAKF,EACLF,MAAO,CAAEV,MAAOL,MAJXiB,YAWjB,wBACEX,UAAU,sBACVC,KAAK,SACLC,QAAS,kBAvCI,SAACC,GAClB,IAAMC,EAAOC,SAASC,cAAc,YAEhCF,IACFA,EAAKG,YAAcJ,EAAUT,GAmCZoB,CAAWlB,IAH5B,SAKG,UCrDHmB,E,4MACJC,MAAQ,CACNnB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFH,UAAW,IACXC,UAAW,EACXC,KAAM,G,EAGRqB,SAAW,I,EAEXC,SAAW,SAACC,GACV,IAAIC,EAAQC,OAAOF,EAAMG,OAAOF,OAGhC,OAFiBD,EAAMG,OAAfC,MAGN,IAAK,YACH,EAAKC,SACH,CACE9B,UAAW0B,GAAS,EAAKH,SACrB,EAAKA,SACLG,IAGR,MAGF,IAAK,YACCA,GAAS,KACXA,EAAQ,IAGV,EAAKI,SACH,CACE7B,UAAWyB,EAAQ,EAAI,EAAIA,IAG/B,MAGF,IAAK,OACH,EAAKI,SACH,CACE5B,KAAMwB,GAAS,EACX,EACAA,M,4CAWd,WACE,MAKIK,KAAKT,MAJPnB,EADF,EACEA,OACAH,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,KAGF,OACE,sBAAKI,UAAU,MAAf,UAEE,qBAAIA,UAAU,aAAd,2BAA0CH,EAAO6B,OAAjD,aAEA,cAAC,EAAD,CACE7B,OAAQA,EACRH,UAAWA,EACXC,UAAWA,EACXC,KAAMA,IAGR,sBAAKI,UAAU,WAAf,UACE,wDACkByB,KAAKR,SADvB,KAEE,uBACEC,SAAUO,KAAKP,SACfjB,KAAK,SACLsB,KAAK,YACLH,MAAO1B,OAIX,wDAEE,uBACEO,KAAK,SACLsB,KAAK,YACLH,MAAOzB,EACPuB,SAAUO,KAAKP,cAInB,iDAEE,uBACEjB,KAAK,SACLsB,KAAK,OACLH,MAAOxB,EACPsB,SAAUO,KAAKP,wB,GAjHXS,IAAMC,WA0HTb,ICnIfc,IAASC,OAAO,cAAC,EAAD,IAASzB,SAAS0B,eAAe,W","file":"static/js/main.b7cb3c44.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  images,\n}) => {\n  const prevImages = (stepNum: number) => {\n    const list = document.querySelector('.wrapper');\n\n    if (list) {\n      list.scrollLeft -= stepNum * itemWidth;\n    }\n  };\n\n  const nextImages = (stepNum: number) => {\n    const list = document.querySelector('.wrapper');\n\n    if (list) {\n      list.scrollLeft += stepNum * itemWidth;\n    }\n  };\n\n  const styles = {\n    width: frameSize * itemWidth,\n  };\n\n  return (\n    <div className=\"container\">\n      <button\n        className=\"button button--prev\"\n        type=\"button\"\n        onClick={() => prevImages(step)}\n      >\n        {'<'}\n      </button>\n      <div className=\"wrapper\">\n        <div className=\"Carousel\" style={styles}>\n          <ul className=\"Carousel__list\">\n            {images.map(image => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={image}\n                  style={{ width: itemWidth }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <button\n        className=\"button button--next\"\n        type=\"button\"\n        onClick={() => nextImages(step)}\n      >\n        {'>'}\n      </button>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n  };\n\n  maxWidth = 200;\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let value = Number(event.target.value);\n    const { name } = event.target;\n\n    switch (name) {\n      case 'itemwidth': {\n        this.setState(\n          {\n            itemWidth: value >= this.maxWidth\n              ? this.maxWidth\n              : value,\n          },\n        );\n        break;\n      }\n\n      case 'framesize': {\n        if (value >= 12) {\n          value = 12;\n        }\n\n        this.setState(\n          {\n            frameSize: value < 0 ? 0 : value,\n          },\n        );\n        break;\n      }\n\n      case 'step': {\n        this.setState(\n          {\n            step: value >= 6\n              ? 6\n              : value,\n          },\n        );\n        break;\n      }\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n        />\n\n        <div className=\"settings\">\n          <label>\n            {`Width (Max: ${this.maxWidth})`}\n            <input\n              onChange={this.onChange}\n              type=\"number\"\n              name=\"itemwidth\"\n              value={itemWidth}\n            />\n          </label>\n\n          <label>\n            Framesize (max 12):\n            <input\n              type=\"number\"\n              name=\"framesize\"\n              value={frameSize}\n              onChange={this.onChange}\n            />\n          </label>\n\n          <label>\n            Step (max 6)\n            <input\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              onChange={this.onChange}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}